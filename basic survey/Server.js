//---loading express 
var express = require('express');
var app = express();
var router = express.Router();
var mongoose = require('mongoose');

//DB
//--------------------DATABASE CONNECTION------------------
mongoose.connect('mongodb://url');

//__dirname" keyword points to current working directory.
var path = __dirname + '/views/';

router.use(function (req,res,next){
   console.log("/" + req.method);
    next();
});

//sendFile sends the html file to the server
router.get("/", function (req,res){
    res.sendFile(path + "index.html");
});
//renders about page
app.get("/about", function(req,res){
    res.sendFile(path + "about.html");
});
//renders contact
app.get("/contact", function(req,res){
   res.sendFile(path + "contact.html");
});

//renders the first page of the survey
app.get("/first", function(req,res){
  res.sendFile(path + "first.html");    
});

//so it can parse the json
var bodyParser = require('body-parser'); 
app.use(bodyParser.json()); // to support JSON bodies
app.use(bodyParser.urlencoded({ extended: true })); // to support URL-encoded bodies

//creates a new schema
var Schema = new mongoose.Schema({
    //the id is default and generated by mongodb
    email: String,
    degree: String,
    campus: String,
    question1: String,
    question2: String,
    question3: String,
    question4: String,
    question4: String,
    question5: String,
    question6: String,
    question7: String,
    question8: String,
    question9: String,
    question10: String,
    question11: String,
    question12: String,
    question13: String
});
 
//gets a User for a model in which is input later. emp is the db name and it's based on the Schema
var User = mongoose.model('emp', Schema);

//POST method for the first page, save to the DB depending on the input
app.post('/new', function(req, res){
	new User({
        email: req.body.email,
		degree: req.body.degree,
		campus : req.body.campus				
	}).save(function(err, doc){
		if(err) res.json(err);
		else    {
            console.log(doc);
            //takes the id and redirects to the new pages
           res.redirect('/second?token=' + encodeURIComponent(doc._id));
        }                
	});

});
//renders the second survey page
app.get("/second",function (req,res){
   res.sendFile(path + "second.html");
});

//POST method for second page, updates the DB depending on the ID of the first input
app.post('/second', function(req,res,next){
  User.update({ _id:req.query.token},
              { 
                question6: req.body.group6,
                question5: req.body.group5,
                question4: req.body.group4,
                question3: req.body.group3,
                question2: req.body.group2,
                question1: req.body.first}, function(err, doc){
        if(err) res.json(err);
        else    {
            console.log(doc);
           res.redirect('/third?token=' + encodeURIComponent(req.query.token));
        }                
    });

});

//renders the third page
app.get("/third", function(req,res){
   res.sendFile(path + "third.html"); 
});

////POST method for the forth page, updates the DB depending on the ID of the first and second input
app.post('/third',function(req,res,next){
  User.update({ _id:req.query.token},
              { 
                question11: req.body.group11,
                question10: req.body.group10,
                question9: req.body.group9,
                question8: req.body.group8,
                question7: req.body.group7}, function(err, doc){
        if(err) res.json(err);
        else    {
            console.log(doc);
           res.redirect('/forth?token=' + encodeURIComponent(req.query.token));
        }                
    });

});
//renders the fourth page of the survey
app.get ("/forth", function(req,res){ 
    res.sendFile(path + "forth.html");
});

//POST method for the last page and redirects to thank you page
app.post('/forth',function(req,res,next){
  User.update({ _id:req.query.token},
              { question13: req.body.textarea,
                question12: req.body.group12        
              }, function(err, doc){
        if(err) res.json(err);
        else    {
            console.log(doc);
            res.redirect('/thankyou');
        }                
    });

});
//renderes thank you page
app.get("/thankyou", function(req,res){
    res.sendFile(path + "thankyou.html");
});

//tells Express to use the routers defined above ^
app.use("/", router);

//this gets executed when nothing else from the above one mathecs the incoming request from teh user
app.use("*", function(req,res){
    res.sendFile(path + "404.html");
});

//shows in the console that the server is running
app.listen(3000, function(){
   console.log("Server is live at port 3000"); 
});

module.exports = router;
